include:
  - project: 'ExplorViz/code/deployment'
    file: '.gitlab-ci-docker-manifest.yml'

default:
  tags:
    - exec-docker
  image: node:latest
  cache: # Cache modules in between jobs
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/
  before_script:
    - which npm && npm ci --cache .npm --prefer-offline

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

stages:
  - build
  - test
  - deploy:images
  - deploy:retagging

build:
  stage: build
  script:
    - npm run build
  artifacts:
    expire_in: 1h
    paths:
      - node_modules
      - dist

test:
  stage: test
  variables:
    REDIS_HOST: redis
    REDIS_PORT: '6379'
  services:
    - name: redis:latest
  script:
    - npm run start &
    - sleep 10
    - npm run test:supertest

.deploy-to-dockerhub:
  stage: deploy:images
  before_script: []
  cache: []
  variables:
    DOCKERHUB_TAG: 'latest'
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CONTAINER_REGISTRY_URL\":{\"auth\":\"$(echo -n ${DOCKERHUB_USERNAME}:${DOCKERHUB_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context=$CI_PROJECT_DIR --dockerfile=$CI_PROJECT_DIR/Dockerfile --destination=$DOCKERHUB_ORGANIZATION/$DOCKERHUB_IMAGE_NAME:$DOCKERHUB_TAG

deploy-main-amd64:
  extends:
    - .deploy-to-dockerhub
  variables:
    DOCKERHUB_TAG: 'amd64'
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'

deploy-main-arm64:
  extends:
    - .deploy-to-dockerhub
  tags:
    - "arm64"
  variables:
    DOCKERHUB_TAG: 'arm64'
  rules:
    - if: $MULTI_ARCH_BUILD

retag-amd64-as-latest::
  extends: .retag-dockerhub-image
  rules:
    - if: $MULTI_ARCH_BUILD
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_PIPELINE_SOURCE != "schedule" && $CI_COMMIT_BRANCH == "main"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
  variables:
    SOURCE_TAG: "amd64"
    TARGET_TAG: "latest"

deploy-mr:
  variables:
    DOCKERHUB_TAG: mr-$CI_MERGE_REQUEST_IID
  extends:
    - .deploy-to-dockerhub
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

publish-multi-arch-manifest:
  extends: .retag-as-multi-arch-dockerhub-image
